{"version":3,"file":"static/js/105.830ba84f.chunk.js","mappings":"mPACA,G,OAA8B,kCAA9B,EAAsE,0BAAtE,EAAuG,0BAAvG,EAA0I,4BAA1I,EAA+K,4B,kBCMzKA,EAAgB,GAmDtB,EAjDgB,WACd,OAA8BC,EAAAA,EAAAA,UAASD,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAcC,EAAAA,EAAAA,SAAO,GA4B3B,IA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEQC,EAAAA,EAAAA,IAAiBN,GAFzB,mBAEPO,EAFO,EAEPA,MACJL,EAAYM,SAAmC,IAAxBD,EAAKE,QAAQC,OAHzB,uBAIbR,EAAYM,SAAU,EACtBG,EAAAA,GAAAA,MAAY,gCAAiC,CAC3CC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAbI,0BAiBfrB,EAAWQ,EAAKE,SAjBD,kDAmBfY,QAAQC,IAAR,MAnBe,0DAAH,qDAsBhBjB,GACD,GAAE,CAACL,IAEmB,IAAnBF,EAAQY,SAAiBR,EAAYM,QACvC,OACE,gBAAKe,UAAWC,EAAhB,kDAGJ,IAAMC,EAAW3B,EAAQ4B,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAS5B,EAApB,EAAoBA,GAApB,OAC3B,gBAAauB,UAAWC,EAAxB,WACE,iBAAKD,UAAWC,EAAhB,WACE,gBAAKK,IAAKC,EAAaC,IAAI,cAAcC,MAAM,KAAKC,OAAO,QAC3D,uBAAIN,QAEN,cAAGJ,UAAWC,EAAd,SAA4BI,MALrB5B,EADkB,IAS7B,OAAO,eAAIuB,UAAWC,EAAf,SAAoCC,GAC5C,C,2JCnDKS,E,OAAiBC,EAAAA,OAAa,CAClCC,QAHe,+BAIfC,OAAQ,CACNC,QANY,sCAUHC,EAAiB,WAC5B,OAAOL,EAAeM,IAAI,uBAC3B,EAEYC,EAAoB,SAAAC,GAC/B,OAAOR,EAAeM,IAAI,gBAAiB,CACzCH,OAAQ,CACNK,MAAAA,EACAC,SAAU,QACVC,eAAe,IAGpB,EAEYC,EAAe,SAAA7C,GAC1B,OAAOkC,EAAeM,IAAf,iBAA6BxC,GACrC,EAEY8C,EAAmB,SAAA9C,GAC9B,OAAOkC,EAAeM,IAAf,iBAA6BxC,EAA7B,YACR,EAEYM,EAAmB,SAAAN,GAC9B,OAAOkC,EAAeM,IAAf,iBAA6BxC,EAA7B,YACR,C","sources":["webpack://Movies_search_app/./src/pages/ReviewsPage/ReviewsPage.module.scss?2842","pages/ReviewsPage/ReviewsPage.jsx","services/moviesFetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"ReviewsPage_reviewsList__Q79TU\",\"item\":\"ReviewsPage_item__2QfcZ\",\"text\":\"ReviewsPage_text__X-0tS\",\"author\":\"ReviewsPage_author__z9wNK\",\"noInfo\":\"ReviewsPage_noInfo__T9fmD\"};","import { useState, useEffect, useRef } from 'react';\nimport { getMoviesReviews } from '../../services/moviesFetch';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './ReviewsPage.module.scss';\nimport placeholder from '../../assets/img/placeholder.png';\nconst INITIAL_VALUE = [];\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(INITIAL_VALUE);\n  const { id } = useParams();\n\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const { data } = await getMoviesReviews(id);\n        if (firstRender.current && data.results.length === 0) {\n          firstRender.current = false;\n          toast.error('No information about reviews!', {\n            position: 'top-right',\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'colored',\n          });\n          return;\n        }\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getReviews();\n  }, [id]);\n\n  if (reviews.length === 0 && !firstRender.current) {\n    return (\n      <div className={styles.noInfo}>Sorry! No information about reviews!</div>\n    );\n  }\n  const elements = reviews.map(({ author, content, id }) => (\n    <li key={id} className={styles.item}>\n      <div className={styles.author}>\n        <img src={placeholder} alt=\"placeholder\" width=\"50\" height=\"50\" />\n        <p>{author}</p>\n      </div>\n      <p className={styles.text}>{content}</p>\n    </li>\n  ));\n  return <ul className={styles.reviewsList}>{elements}</ul>;\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '12054267cdcdd4d8e665a5b76a183077';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst moviesInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const trendingMovies = () => {\n  return moviesInstance.get('/trending/movie/week');\n};\n\nexport const getMoviesBySearch = query => {\n  return moviesInstance.get('/search/movie', {\n    params: {\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n};\n\nexport const getMovieById = id => {\n  return moviesInstance.get(`/movie/${id}`);\n};\n\nexport const getMoviesCredits = id => {\n  return moviesInstance.get(`/movie/${id}/credits`);\n};\n\nexport const getMoviesReviews = id => {\n  return moviesInstance.get(`/movie/${id}/reviews`);\n};\n"],"names":["INITIAL_VALUE","useState","reviews","setReviews","id","useParams","firstRender","useRef","useEffect","getReviews","getMoviesReviews","data","current","results","length","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","console","log","className","styles","elements","map","author","content","src","placeholder","alt","width","height","moviesInstance","axios","baseURL","params","api_key","trendingMovies","get","getMoviesBySearch","query","language","include_adult","getMovieById","getMoviesCredits"],"sourceRoot":""}