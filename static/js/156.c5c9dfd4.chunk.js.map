{"version":3,"file":"static/js/156.c5c9dfd4.chunk.js","mappings":"wLACA,EAAwB,8BAAxB,EAA4D,4B,SCK/CA,EAAiB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,OACpCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC,KAAD,CAAeC,GAAE,iBAAYJ,GAAMK,MAAO,CAAEC,KAAMJ,GAAlD,WACE,gBACEK,IACEN,EAAM,0CACiCA,GACnCO,EAENC,IAAI,SACJC,MAAM,MACNC,OAAO,MACPC,UAAWC,KAEb,eAAGD,UAAWC,EAAd,cAA8Bd,OAZrBC,EAed,ECxBD,EAA6B,+BCGhBc,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,eAAIH,UAAWC,EAAf,SACGE,EAAOC,KAAI,gBAAGjB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIiB,EAAd,EAAcA,YAAd,OACV,SAACnB,EAAD,CAAyBC,MAAOA,EAAOC,GAAIA,EAAIC,OAAQgB,GAAlCjB,EADX,KAKjB,C,2GCXD,EAAwB,wB,oCCIlBkB,EAA4B,GAA5BA,EAAuC,GA4B7C,EA1BiB,WACf,OAAgCC,EAAAA,EAAAA,UAASD,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAASD,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,kHAEOC,EAAAA,EAAAA,MAFP,gBAERC,EAFQ,EAERA,KACRN,EAAYM,EAAKC,SAHD,gDAIPC,EAJO,KAIPA,SACTN,EACEM,EAASF,KAAKG,gBAAkB,sCANlB,yDAAH,qDAUjBL,GACD,GAAE,KAED,6BACE,eAAIb,UAAWC,EAAf,6BACA,SAACC,EAAA,EAAD,CAAYC,OAAQK,IACnBE,IAAS,uBAAIA,MAGnB,C,2JC1BKS,E,OAAiBC,EAAAA,OAAa,CAClCC,QAHe,+BAIfC,OAAQ,CACNC,QANY,sCAUHT,EAAiB,WAC5B,OAAOK,EAAeK,IAAI,uBAC3B,EAEYC,EAAoB,SAAAC,GAC/B,OAAOP,EAAeK,IAAI,gBAAiB,CACzCF,OAAQ,CACNI,MAAAA,EACAC,SAAU,QACVC,eAAe,IAGpB,EAEYC,EAAe,SAAAzC,GAC1B,OAAO+B,EAAeK,IAAf,iBAA6BpC,GACrC,EAEY0C,EAAmB,SAAA1C,GAC9B,OAAO+B,EAAeK,IAAf,iBAA6BpC,EAA7B,YACR,EAEY2C,EAAmB,SAAA3C,GAC9B,OAAO+B,EAAeK,IAAf,iBAA6BpC,EAA7B,YACR,C","sources":["webpack://Movies_search_app/./src/components/MoviesListItem/MoviesListItem.module.scss?b711","components/MoviesListItem/MoviesListItem.jsx","webpack://Movies_search_app/./src/components/MoviesList/MoviesList.module.scss?709c","components/MoviesList/MoviesList.jsx","webpack://Movies_search_app/./src/pages/HomePage/HomePage.module.scss?bae6","pages/HomePage/HomePage.jsx","services/moviesFetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MoviesListItem_title__9IauO\",\"img\":\"MoviesListItem_img__z1ydj\"};","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport posterPlaceholder from '../../assets/img/poster.webp';\nimport styles from './MoviesListItem.module.scss';\n\nexport const MoviesListItem = ({ title, id, poster }) => {\n  const location = useLocation();\n\n  return (\n    <Link key={id} to={`/movie/${id}`} state={{ from: location }}>\n      <img\n        src={\n          poster\n            ? `https://image.tmdb.org/t/p/w500/${poster}`\n            : posterPlaceholder\n        }\n        alt=\"poster\"\n        width=\"240\"\n        height=\"360\"\n        className={styles.img}\n      />\n      <p className={styles.title}> {title}</p>\n    </Link>\n  );\n};\n\nMoviesListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__uT7h1\"};","import { MoviesListItem } from 'components/MoviesListItem/MoviesListItem';\nimport styles from './MoviesList.module.scss';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <ul className={styles.moviesList}>\n      {movies.map(({ title, id, poster_path }) => (\n        <MoviesListItem key={id} title={title} id={id} poster={poster_path} />\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__ygULj\"};","import styles from './HomePage.module.scss';\nimport { useState, useEffect } from 'react';\nimport { trendingMovies } from '../../services/moviesFetch';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst INITIAL_VALUE = { trending: [], error: '' };\n\nconst HomePage = () => {\n  const [trending, setTrending] = useState(INITIAL_VALUE.trending);\n  const [error, setError] = useState(INITIAL_VALUE.error);\n\n  useEffect(() => {\n    const getTrending = async () => {\n      try {\n        const { data } = await trendingMovies();\n        setTrending(data.results);\n      } catch ({ response }) {\n        setError(\n          response.data.status_message || 'Opps...Something wrong, try later!'\n        );\n      }\n    };\n    getTrending();\n  }, []);\n  return (\n    <main>\n      <h1 className={styles.title}>Trending today</h1>\n      <MoviesList movies={trending} />\n      {error && <p>{error}</p>}\n    </main>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = '12054267cdcdd4d8e665a5b76a183077';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst moviesInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const trendingMovies = () => {\n  return moviesInstance.get('/trending/movie/week');\n};\n\nexport const getMoviesBySearch = query => {\n  return moviesInstance.get('/search/movie', {\n    params: {\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n};\n\nexport const getMovieById = id => {\n  return moviesInstance.get(`/movie/${id}`);\n};\n\nexport const getMoviesCredits = id => {\n  return moviesInstance.get(`/movie/${id}/credits`);\n};\n\nexport const getMoviesReviews = id => {\n  return moviesInstance.get(`/movie/${id}/reviews`);\n};\n"],"names":["MoviesListItem","title","id","poster","location","useLocation","to","state","from","src","posterPlaceholder","alt","width","height","className","styles","MoviesList","movies","map","poster_path","INITIAL_VALUE","useState","trending","setTrending","error","setError","useEffect","getTrending","trendingMovies","data","results","response","status_message","moviesInstance","axios","baseURL","params","api_key","get","getMoviesBySearch","query","language","include_adult","getMovieById","getMoviesCredits","getMoviesReviews"],"sourceRoot":""}