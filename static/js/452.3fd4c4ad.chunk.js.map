{"version":3,"file":"static/js/452.3fd4c4ad.chunk.js","mappings":"+PACA,EAAuB,uBAAvB,EAAqD,uBAArD,EAAqF,yB,2BCO/EA,EAAgB,GAkEtB,EAhEa,WACX,OAAwBC,EAAAA,EAAAA,UAASD,GAAjC,eAAOE,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAcC,EAAAA,EAAAA,SAAO,GA8B3B,IA5BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEMC,EAAAA,EAAAA,IAAiBN,GAFvB,mBAETO,EAFS,EAETA,MACJL,EAAYM,SAAgC,IAArBD,EAAKT,KAAKW,OAHpB,uBAIfP,EAAYM,SAAU,EACtBE,EAAAA,GAAAA,MAAY,6BAA8B,CACxCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAbM,0BAkBjBpB,EAAQQ,EAAKT,MAlBI,kDAoBjBsB,QAAQC,IAAR,MApBiB,0DAAH,qDAwBlBhB,GACD,GAAE,CAACL,IAEgB,IAAhBF,EAAKW,SAAiBP,EAAYM,QACpC,OACE,gBAAKc,UAAWC,EAAhB,+CAIJ,IAAMC,EAAS1B,EAAK2B,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,aAAc5B,EAAS,EAATA,GACxD,OACE,gBAAasB,UAAWC,EAAxB,WACE,gBACEM,IACED,EAAY,0CAC2BA,GACnCE,EAENC,IAAI,oBACJC,MAAM,MACNC,OAAO,SAET,4BACE,uBAAIP,KACJ,uCAAeC,UAbV3B,EAiBZ,IAED,OAAO,eAAIsB,UAAWC,EAAf,SAA6BC,GACrC,C,2JCnEKU,E,OAAiBC,EAAAA,OAAa,CAClCC,QAHe,+BAIfC,OAAQ,CACNC,QANY,sCAUHC,EAAiB,WAC5B,OAAOL,EAAeM,IAAI,uBAC3B,EAEYC,EAAoB,SAAAC,GAC/B,OAAOR,EAAeM,IAAI,gBAAiB,CACzCH,OAAQ,CACNK,MAAAA,EACAC,SAAU,QACVC,eAAe,IAGpB,EAEYC,EAAe,SAAA7C,GAC1B,OAAOkC,EAAeM,IAAf,iBAA6BxC,GACrC,EAEYM,EAAmB,SAAAN,GAC9B,OAAOkC,EAAeM,IAAf,iBAA6BxC,EAA7B,YACR,EAEY8C,EAAmB,SAAA9C,GAC9B,OAAOkC,EAAeM,IAAf,iBAA6BxC,EAA7B,YACR,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/CastPage/CastPage.module.scss?0463","pages/CastPage/CastPage.jsx","services/moviesFetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CastPage_list__dgba-\",\"item\":\"CastPage_item__0izCo\",\"noInfo\":\"CastPage_noInfo__dhHu5\"};","import { useState, useEffect, useRef } from 'react';\nimport { getMoviesCredits } from '../../services/moviesFetch';\nimport { useParams } from 'react-router-dom';\nimport person from '../../assets/img/person.jpg';\nimport styles from './CastPage.module.scss';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst INITIAL_VALUE = [];\n\nconst Cast = () => {\n  const [cast, setCast] = useState(INITIAL_VALUE);\n  const { id } = useParams();\n\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        const { data } = await getMoviesCredits(id);\n        if (firstRender.current && data.cast.length === 0) {\n          firstRender.current = false;\n          toast.error('No information about cast!', {\n            position: 'top-right',\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'colored',\n          });\n          return;\n        }\n\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getMovieCast();\n  }, [id]);\n\n  if (cast.length === 0 && !firstRender.current) {\n    return (\n      <div className={styles.noInfo}>Sorry! No information about cast!</div>\n    );\n  }\n\n  const actors = cast.map(({ name, character, profile_path, id }) => {\n    return (\n      <li key={id} className={styles.item}>\n        <img\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n              : person\n          }\n          alt=\"actor placeholder\"\n          width=\"180\"\n          height=\"270\"\n        />\n        <div>\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </div>\n      </li>\n    );\n  });\n\n  return <ul className={styles.list}>{actors}</ul>;\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '12054267cdcdd4d8e665a5b76a183077';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst moviesInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const trendingMovies = () => {\n  return moviesInstance.get('/trending/movie/week');\n};\n\nexport const getMoviesBySearch = query => {\n  return moviesInstance.get('/search/movie', {\n    params: {\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n};\n\nexport const getMovieById = id => {\n  return moviesInstance.get(`/movie/${id}`);\n};\n\nexport const getMoviesCredits = id => {\n  return moviesInstance.get(`/movie/${id}/credits`);\n};\n\nexport const getMoviesReviews = id => {\n  return moviesInstance.get(`/movie/${id}/reviews`);\n};\n"],"names":["INITIAL_VALUE","useState","cast","setCast","id","useParams","firstRender","useRef","useEffect","getMovieCast","getMoviesCredits","data","current","length","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","console","log","className","styles","actors","map","name","character","profile_path","src","person","alt","width","height","moviesInstance","axios","baseURL","params","api_key","trendingMovies","get","getMoviesBySearch","query","language","include_adult","getMovieById","getMoviesReviews"],"sourceRoot":""}