{"version":3,"file":"static/js/459.dbb48bb4.chunk.js","mappings":"2NACA,EAAwB,wB,iBCAxB,EAA2B,+BAA3B,EAAkE,4BAAlE,EAAoG,0B,SCGvFA,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAASI,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YAC1C,OACE,UAAC,KAAD,CAAeC,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMT,GAAlD,WACE,gBACEU,IAAG,0CAAqCJ,GACxCK,IAAI,SACJC,MAAM,MACNC,UAAWC,KAEb,cAAGD,UAAWC,EAAd,SAA6BV,MAPpBC,EAUd,IACD,OACE,gBAAKQ,UAAU,YAAf,UACE,eAAIA,UAAWC,EAAf,SAAiCZ,KAGtC,E,kBCrBKa,EAA4B,GAA5BA,EAAuC,GA4B7C,EA1BiB,WACf,OAAgCC,EAAAA,EAAAA,UAASD,GAAzC,eAAOhB,EAAP,KAAiBkB,EAAjB,KACA,GAA0BD,EAAAA,EAAAA,UAASD,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,kHAEOC,EAAAA,EAAAA,MAFP,gBAERC,EAFQ,EAERA,KACRN,EAAYM,EAAKC,SAHD,gDAIPC,EAJO,KAIPA,SACTN,EACEM,EAASF,KAAKG,gBAAkB,sCANlB,yDAAH,qDAUjBL,GACD,GAAE,KAED,6BACE,eAAIR,UAAWC,EAAf,6BACA,SAAChB,EAAD,CAAcC,SAAUA,IACvBmB,IAAS,uBAAIA,MAGnB,C,2JCzBKS,E,OAAiBC,EAAAA,OAAa,CAClCC,QAHe,+BAIfC,OAAQ,CACNC,QANY,sCAUHT,EAAiB,WAC5B,OAAOK,EAAeK,IAAI,uBAC3B,EAEYC,EAAoB,SAAAC,GAC/B,OAAOP,EAAeK,IAAI,gBAAiB,CACzCF,OAAQ,CACNI,MAAAA,EACAC,SAAU,QACVC,eAAe,IAGpB,EAEYC,EAAe,SAAAhC,GAC1B,OAAOsB,EAAeK,IAAf,iBAA6B3B,GACrC,EAEYiC,EAAmB,SAAAjC,GAC9B,OAAOsB,EAAeK,IAAf,iBAA6B3B,EAA7B,YACR,EAEYkC,EAAmB,SAAAlC,GAC9B,OAAOsB,EAAeK,IAAf,iBAA6B3B,EAA7B,YACR,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.scss?bae6","webpack://goit-react-hw-05-movies/./src/components/TrendingList/TrendingList.module.scss?2e44","components/TrendingList/TrendingList.jsx","pages/HomePage/HomePage.jsx","services/moviesFetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__ygULj\"};","// extracted by mini-css-extract-plugin\nexport default {\"trending\":\"TrendingList_trending__gLFZN\",\"title\":\"TrendingList_title__YzMrh\",\"img\":\"TrendingList_img__GLNNu\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './TrendingList.module.scss';\n\nexport const TrendingList = ({ trending }) => {\n  const location = useLocation();\n\n  const elements = trending.map(({ title, id, poster_path }) => {\n    return (\n      <Link key={id} to={`/movie/${id}`} state={{ from: location }}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt=\"poster\"\n          width=\"240\"\n          className={styles.img}\n        />\n        <p className={styles.title}>{title}</p>\n      </Link>\n    );\n  });\n  return (\n    <div className=\"container\">\n      <ul className={styles.trending}>{elements}</ul>\n    </div>\n  );\n};\n\nTrendingList.propTypes = {\n  trending: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styles from './HomePage.module.scss';\nimport { TrendingList } from '../../components/TrendingList/TrendingList';\nimport { useState, useEffect } from 'react';\nimport { trendingMovies } from '../../services/moviesFetch';\nconst INITIAL_VALUE = { trending: [], error: '' };\n\nconst HomePage = () => {\n  const [trending, setTrending] = useState(INITIAL_VALUE.trending);\n  const [error, setError] = useState(INITIAL_VALUE.error);\n\n  useEffect(() => {\n    const getTrending = async () => {\n      try {\n        const { data } = await trendingMovies();\n        setTrending(data.results);\n      } catch ({ response }) {\n        setError(\n          response.data.status_message || 'Opps...Something wrong, try later!'\n        );\n      }\n    };\n    getTrending();\n  }, []);\n  return (\n    <main>\n      <h1 className={styles.title}>Trending today</h1>\n      <TrendingList trending={trending} />\n      {error && <p>{error}</p>}\n    </main>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = '12054267cdcdd4d8e665a5b76a183077';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst moviesInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const trendingMovies = () => {\n  return moviesInstance.get('/trending/movie/week');\n};\n\nexport const getMoviesBySearch = query => {\n  return moviesInstance.get('/search/movie', {\n    params: {\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n};\n\nexport const getMovieById = id => {\n  return moviesInstance.get(`/movie/${id}`);\n};\n\nexport const getMoviesCredits = id => {\n  return moviesInstance.get(`/movie/${id}/credits`);\n};\n\nexport const getMoviesReviews = id => {\n  return moviesInstance.get(`/movie/${id}/reviews`);\n};\n"],"names":["TrendingList","trending","location","useLocation","elements","map","title","id","poster_path","to","state","from","src","alt","width","className","styles","INITIAL_VALUE","useState","setTrending","error","setError","useEffect","getTrending","trendingMovies","data","results","response","status_message","moviesInstance","axios","baseURL","params","api_key","get","getMoviesBySearch","query","language","include_adult","getMovieById","getMoviesCredits","getMoviesReviews"],"sourceRoot":""}