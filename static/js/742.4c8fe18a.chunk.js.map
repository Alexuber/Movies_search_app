{"version":3,"file":"static/js/742.4c8fe18a.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.scss?5dd0","components/SearchForm/SearchForm.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesListItem/MoviesListItem.module.scss?b711","components/MoviesListItem/MoviesListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.scss?709c","components/MoviesList/MoviesList.jsx","pages/MoviesPage/MoviesPage.jsx","services/moviesFetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__49W6b\",\"input\":\"SearchForm_input__7U8V+\",\"button\":\"SearchForm_button__arepV\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './SearchForm.module.scss';\n\nconst INITIAL_STATE = '';\n\nexport const SearchForm = ({ handleFormSubmit }) => {\n  const [query, setQuery] = useState(INITIAL_STATE);\n\n  const handleChange = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      toast.error('Search field is empty!', {\n        position: 'top-right',\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'colored',\n      });\n    }\n    handleFormSubmit(query);\n    setQuery(INITIAL_STATE);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label htmlFor=\"search\"></label>\n      <input\n        type=\"text\"\n        placeholder=\"Search movie\"\n        value={query}\n        onChange={handleChange}\n        className={styles.input}\n      />\n      <button disabled={!query.trim()} className={styles.button}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  handleFormSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MoviesListItem_title__9IauO\",\"img\":\"MoviesListItem_img__z1ydj\"};","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport posterPlaceholder from '../../assets/img/poster.webp';\nimport styles from './MoviesListItem.module.scss';\n\nexport const MoviesListItem = ({ title, id, poster }) => {\n  const location = useLocation();\n\n  return (\n    <Link key={id} to={`/movie/${id}`} state={{ from: location }}>\n      <img\n        src={\n          poster\n            ? `https://image.tmdb.org/t/p/w500/${poster}`\n            : posterPlaceholder\n        }\n        alt=\"poster\"\n        width=\"240\"\n        height=\"360\"\n        className={styles.img}\n      />\n      <p className={styles.title}> {title}</p>\n    </Link>\n  );\n};\n\nMoviesListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__uT7h1\"};","import { MoviesListItem } from 'components/MoviesListItem/MoviesListItem';\nimport styles from './MoviesList.module.scss';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <ul className={styles.moviesList}>\n      {movies.map(({ title, id, poster_path }) => (\n        <MoviesListItem key={id} title={title} id={id} poster={poster_path} />\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { getMoviesBySearch } from '../../services/moviesFetch';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst INITIAL_STATE = {\n  movies: [],\n  error: '',\n};\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState(INITIAL_STATE.movies);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const prevQuery = searchParams.get('search');\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const { data } = await getMoviesBySearch(prevQuery);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (prevQuery !== null) {\n      getMovies();\n    }\n  }, [prevQuery]);\n\n  useEffect(() => {\n    if (!prevQuery) {\n      setMovies(INITIAL_STATE.movies);\n    }\n  }, [prevQuery]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ search: query });\n  };\n\n  return (\n    <main>\n      {!prevQuery && <SearchForm handleFormSubmit={handleFormSubmit} />}\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = '12054267cdcdd4d8e665a5b76a183077';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst moviesInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const trendingMovies = () => {\n  return moviesInstance.get('/trending/movie/week');\n};\n\nexport const getMoviesBySearch = query => {\n  return moviesInstance.get('/search/movie', {\n    params: {\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n};\n\nexport const getMovieById = id => {\n  return moviesInstance.get(`/movie/${id}`);\n};\n\nexport const getMoviesCredits = id => {\n  return moviesInstance.get(`/movie/${id}/credits`);\n};\n\nexport const getMoviesReviews = id => {\n  return moviesInstance.get(`/movie/${id}/reviews`);\n};\n"],"names":["SearchForm","handleFormSubmit","useState","query","setQuery","onSubmit","e","preventDefault","trim","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","className","styles","htmlFor","type","placeholder","value","onChange","target","disabled","MoviesListItem","title","id","poster","location","useLocation","to","state","from","src","posterPlaceholder","alt","width","height","MoviesList","movies","map","poster_path","INITIAL_STATE","setMovies","useSearchParams","searchParams","setSearchParams","prevQuery","get","useEffect","getMovies","getMoviesBySearch","data","results","console","log","search","moviesInstance","axios","baseURL","params","api_key","trendingMovies","language","include_adult","getMovieById","getMoviesCredits","getMoviesReviews"],"sourceRoot":""}